[{"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/index.js":"1","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/App.js":"2","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/containers/appointmentsPage/AppointmentsPage.js":"3","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/containers/contactsPage/ContactsPage.js":"4","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/tileList/TileList.js":"5","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/contactForm/ContactForm.js":"6","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/tile/Tile.js":"7","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/appointmentForm/AppointmentForm.js":"8","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/contactPicker/ContactPicker.js":"9"},{"size":250,"mtime":1627921291110,"results":"10","hashOfConfig":"11"},{"size":2015,"mtime":1628013687647,"results":"12","hashOfConfig":"11"},{"size":1338,"mtime":1627961245928,"results":"13","hashOfConfig":"11"},{"size":2222,"mtime":1627952296412,"results":"14","hashOfConfig":"11"},{"size":277,"mtime":1628008441933,"results":"15","hashOfConfig":"11"},{"size":759,"mtime":1627929070569,"results":"16","hashOfConfig":"11"},{"size":476,"mtime":1627952354630,"results":"17","hashOfConfig":"11"},{"size":1444,"mtime":1627961653025,"results":"18","hashOfConfig":"11"},{"size":303,"mtime":1627961721613,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"y21euo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/index.js",[],["40","41"],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/App.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/containers/appointmentsPage/AppointmentsPage.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/containers/contactsPage/ContactsPage.js",["42","43"],"import React, {useState,useEffect} from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  const {contacts, setContacts, addContact} = props;\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicateName, setDuplicateName] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   console.log(`Name: ${name}`);\r\n   duplicateCheck();\r\n   console.log(\"Value of duplicate name: \"+duplicateName);\r\n    if(!duplicateName){ //if duplicate name is set to true, addContact\r\n      addContact(name,phone,email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n    else{\r\n      //alert(\"Please Enter A different name!\");\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n  \r\n  const duplicateCheck = () => { //flow on correct enter: return false\r\n    let value = contacts.find((contact)=> contact.name === name);\r\n    if(value !== undefined){\r\n      return false;\r\n    }else return true;\r\n  }\r\n  useEffect(()=>{ //on returned false from duplicate check, setDuplicateName to true\r\n    if(duplicateCheck()) setDuplicateName(false); //if the contacts/find is empty, return false and no duplicate name\r\n    else setDuplicateName(true);\r\n  }, [name, contacts, duplicateName]);\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList \r\n          tiles={contacts}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/tileList/TileList.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/contactForm/ContactForm.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/tile/Tile.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/appointmentForm/AppointmentForm.js",[],"/Users/lucamilletti/Desktop/CodeCademy/Appointment Planner/src/components/contactPicker/ContactPicker.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":6,"column":20,"nodeType":"50","messageId":"51","endLine":6,"endColumn":31},{"ruleId":"52","severity":1,"message":"53","line":47,"column":6,"nodeType":"54","endLine":47,"endColumn":37,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'setContacts' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'duplicateCheck'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [name, contacts, duplicateName, duplicateCheck]",{"range":"61","text":"62"},[1605,1636],"[name, contacts, duplicateName, duplicateCheck]"]